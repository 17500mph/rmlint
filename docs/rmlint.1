.\" Man page generated from reStructuredText.
.
.TH RMLINT 1 "29-10-2014" "2.0.0 (aa1281d)" "file system"
.SH NAME
rmlint \- find duplicate files and other space waste efficiently
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Stuff in curly braces gets replaced by SCons
.
.SH SYNOPSIS
.sp
rmlint [[//]TARGET_DIR ...] [FILE ...] [\-] [OPTIONS]
.SH DESCRIPTION
.sp
\fIrmlint\fP finds space waste and other broken things on your filesystem and offers
to remove it.
.INDENT 0.0
.IP \(bu 2
Duplicate files.
.IP \(bu 2
Nonstripped Binaries (Binaries with debug symbols).
.IP \(bu 2
Broken links.
.IP \(bu 2
Empty files and directories.
.IP \(bu 2
Files with broken user or group id.
.UNINDENT
.sp
In order to find the lint, \fIrmlint\fP is given one or more directories to traverse.
If no directory or file was given, the current working directory is assumed.
\fIrmlint\fP will take care of things like filesystem loops and symlinks during
traversing.
.sp
Found duplicates are divided into the original and duplicates. Original
are what \fIrmlint\fP thinks to be the file that was first there. You can drive
the original detection with the \fI\-S\fP option. If you know which path contains the
originals you can prefix the path with \fB//\fP,
.sp
Quick clues for adjusting settings are available by using the \fI\-q\fP option.
.sp
\fBNote:\fP \fIrmlint\fP will not delete any files. It only produces executable output
for you to remove it.
.SH OPTIONS
.SS General Options
.sp
\fB\-T \-\-types="description"\fP (\fIdefault:\fP \-T defaults)
.INDENT 0.0
.INDENT 3.5
Configure the types of lint rmlint is supposed to find. The \fIdescription\fP
string enumerates the types that shall be investigated, separted by a space.
At the beginning of the string certain groups may be specified.
.INDENT 0.0
.IP \(bu 2
\fBall\fP: Enables all lint types.
.IP \(bu 2
\fBdefaults\fP: Enables all lint types, but \fBnamecluster\fP and \fBnonstripped\fP\&.
.IP \(bu 2
\fBnone\fP: Disable all lint types.
.UNINDENT
.sp
All following lint types must be one of the following, optionally prefixed
with a \fB+\fP or \fB\-\fP to select or deselect it:
.INDENT 0.0
.IP \(bu 2
\fBbadids\fP, \fBbi\fP: Find bad UID, GID or files with both.
.IP \(bu 2
\fBbadlinks\fP, \fBbl\fP: Find bad symlinks pointing nowhere.
.IP \(bu 2
\fBemptydirs\fP, \fBed\fP: Find empty directories.
.IP \(bu 2
\fBemptyfiles\fP, \fBef\fP: Find empty files.
.IP \(bu 2
\fBnonstripped\fP, \fBns\fP: Find nonstripped binaries. (\fBWarning:\fP slow)
.IP \(bu 2
\fBduplicates\fP, \fBdf\fP: Find duplicate files.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-o \-\-output=formatter:file\fP (\fIdefault:\fP \-o sh:rmlint.sh \-o pretty:stdout \-o summary:stdout)
\fB\-O \-\-add\-output=formatter[:file]\fP
.INDENT 0.0
.INDENT 3.5
Configure the way rmlint ouputs it\(aqs results. You link a formatter to a
file. A file might either be an arbitary path or \fBstdout\fP or \fBstderr\fP\&.
If file is omitted, \fBstdout\fP is assumed.
.sp
If this options is specified, rmlint\(aqs defaults are overwritten.
The option can be specified several times and formatters can be specified
more than once for different files.
.sp
\fB\-\-add\-output\fP works the same way, but does not overwrite the defaults.
Both \fB\-o\fP and \fB\-O\fP may not be specified at the same time.
.sp
For a list of formatters and their options, look at the \fBFormatters\fP
section below.
.UNINDENT
.UNINDENT
.sp
\fB\-c \-\-config=formatter:key[=value]\fP (\fIdefault:\fP none)
.INDENT 0.0
.INDENT 3.5
Configure a formatter. This option can be used to finetune the behaviour of
the existing formatters. See the \fBFormatters\fP section for details on the
available keys.
.sp
If the value is omitted it is set to a truthy value.
.UNINDENT
.UNINDENT
.sp
\fB\-a \-\-algorithm=name\fP (\fIdefault:\fP spooky)
.INDENT 0.0
.INDENT 3.5
Choose the hash algorithm to use for finding duplicate files.
The following well\-known algorithms are available:
.sp
\fBspooky\fP, \fBcity\fP, \fBmurmur\fP, \fBmd5\fP\&.  \fBsha1\fP, \fBsha256\fP,
\fBsha512\fP\&.
.sp
If not explicitly stated in the name the hashfunctions use 128 bit.
There are variations of the above functions:
.INDENT 0.0
.IP \(bu 2
\fBbastard:\fP 256bit, half seeded \fBcity\fP, half \fBmurmur\fP\&.
.IP \(bu 2
\fBspook32, spook64:\fP Faster version of \fBspooky\fP with less bits.
.IP \(bu 2
\fBcity32, city64:\fP Faster version of \fBcity\fP with less bits.
.IP \(bu 2
\fBparanoid:\fP No hash function, compares files byte\-by\-byte.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-v \-\-loud / \-V \-\-quiet\fP
.INDENT 0.0
.INDENT 3.5
Increase or decrease the verbosity. You can pass these options several
times. This only affects rmlint\(aqs logging on \fIstderr\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-p \-\-paranoid / \-P \-\-less\-paranoid\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Increase the paranoia of rmlints internals. Both options can be specified up
to three times. They do not do any work themselves, but set some other
options implicitly as a shortcut.
.INDENT 0.0
.IP \(bu 2
\fB\-p\fP is equivalent to \fB\-\-flock\-files \-\-algorithm=bastard\fP
.IP \(bu 2
\fB\-pp\fP is equivalent to \fB\-\-flock\-files \-\-algorithm=sha512\fP
.IP \(bu 2
\fB\-ppp\fP is equivalent to \fB\-\-flock\-files \-\-algorithm=paranoid\fP
.UNINDENT
.sp
The last one is not a hash function in the traditional meaning, but performs
a byte\-by\-byte comparison of each file. See also \fB\-\-max\-paranoid\-ram\fP\&.
.sp
For the adventurous, it is also possible to decrease the default paranoia.
.INDENT 0.0
.IP \(bu 2
\fB\-P\fP is equivalent to \fB\-\-algorithm spooky64\fP
.IP \(bu 2
\fB\-PP\fP is equivalent to \fB\-\-algorithm spooky32\fP
.IP \(bu 2
\fB\-PPP\fP is equivalent to \fB\-\-algorithm debian_random\fP
.UNINDENT
.sp
This is really not recommended.
.UNINDENT
.UNINDENT
.sp
\fB\-D \-\-merge\-directories\fP (\fIexperimental, disabled by default\fP)
.INDENT 0.0
.INDENT 3.5
Makes rmlint use a special mode where all found duplicates are collected and
checked wether whole directory trees are duplicates. This is an HIGHLY
EXPERIMENTAL FEATURE and was/is tricky to implement right. Use with caution.
You always should make sure that the investigated directory is not modified
during rmlint or it\(aqs removal scripts run.
.sp
Output is deferred until all duplicates were found.
Sole duplicate groups are printed after the directories.
.sp
\fB\-\-sortcriteria\fP applies for directories too, but \(aqp\(aq or \(aqP\(aq (path index)
has no defined (useful) meaning. Sorting takes only place when the number of
preferred files in the directory differs.
.sp
\fINotes:\fP
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
This does not work with \fB\-\-algorithm=paranoid\fP (or \fB\-ppp\fP).
.IP \(bu 2
This option implies \fB\-\-flock\-files\fP\&.
.IP \(bu 2
This feature might not deliver perfect result
.IP \(bu 2
This feature might add some runtime.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-u \-\-max\-paranoid\-ram=size\fP
.INDENT 0.0
.INDENT 3.5
Apply a maximum number of bytes to use for \fB\-\-paranoid\fP\&.
The \fBsize\fP\-description has the same format as for \fB\-\-size\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-w \-\-with\-color\fP (\fIdefault\fP) \fB/ \-W \-\-no\-with\-color\fP
.INDENT 0.0
.INDENT 3.5
Use color escapes for pretty output or disable them.
If you pipe \fIrmlints\fP output to a file \-W is assumed automatically.
.UNINDENT
.UNINDENT
.sp
\fB\-q \-\-confirm\-settings / \-Q \-\-no\-confirm\-settings\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Print a screen of the used settings and the options that you need to change
them. Requires confirmation before proceeding. This option has only effect
when \fB\-o confirm:stdout\fP is specified.
.UNINDENT
.UNINDENT
.sp
\fB\-h \-\-help / \-H \-\-version\fP
.INDENT 0.0
.INDENT 3.5
Show this manual or print the version string.
.UNINDENT
.UNINDENT
.SS Traversal Options
.sp
\fB\-t \-\-threads=N\fP (\fIdefault:\fP 16)
.INDENT 0.0
.INDENT 3.5
The number of threads to use during file tree traversal and hashing.
\fIrmlint\fP probably knows better than you how to set the value.
.UNINDENT
.UNINDENT
.sp
\fB\-s \-\-size=range\fP (\fIdefault:\fP all)
.INDENT 0.0
.INDENT 3.5
Only consider files in a certain size range.
The format of \fIrange\fP is \fImin\-max\fP, where both ends can be specified
as a number with an optional multiplier. The available multipliers are:
.INDENT 0.0
.IP \(bu 2
\fIC\fP (1^1), \fIW\fP (2^1), B (512^1), \fIK\fP (1000^1), KB (1024^1), \fIM\fP (1000^2), \fIMB\fP (1024^2), \fIG\fP (1000^3), \fIGB\fP (1024^3),
.IP \(bu 2
\fIT\fP (1000^4), \fITB\fP (1024^4), \fIP\fP (1000^5), \fIPB\fP (1024^5), \fIE\fP (1000^6), \fIEB\fP (1024^6)
.UNINDENT
.sp
The size format is about the same as \fIdd(1)\fP uses. Example: \fB"100KB\-2M"\fP\&.
.sp
It\(aqs also possible to specify only one size. In this case the size is
interpreted as "up to this size".
.UNINDENT
.UNINDENT
.sp
\fB\-d \-\-max\-depth=depth\fP (\fIdefault:\fP INF)
.INDENT 0.0
.INDENT 3.5
Only recurse up to this depth. A depth of 1 would disable recursion and is
equivalent to a directory listing.
.UNINDENT
.UNINDENT
.sp
\fB\-l \-\-hardlinked / \-L \-\-no\-hardlinked\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
By default \fIrmlint\fP will not allow several files with the same \fIinode\fP and
therefore keep only one of them in it\(aqs internal list.
If \fI\-l\fP is specified the whole group is reported instead.
.UNINDENT
.UNINDENT
.sp
\fB\-f \-\-followlinks\fP (\fIdefault\fP) \fB/ \-F \-\-no\-followlinks\fP
.INDENT 0.0
.INDENT 3.5
Follow symbolic links? If file system loops occur \fIrmlint\fP will detect this.
If \fI\-F\fP is specified, symbolic links will be ignored completely.
.sp
\fBNote:\fP Hardlinks are always followed, but it depends on \fB\-L\fP how those are
handled.
.UNINDENT
.UNINDENT
.sp
\fB\-x \-\-crossdev\fP (\fIdefault\fP) \fB/ \-X \-\-no\-crossdev\fP
.INDENT 0.0
.INDENT 3.5
Do cross over mount points (\fB\-x\fP)? Or stay always on the same device
(\fB\-X\fP)?
.UNINDENT
.UNINDENT
.sp
\fB\-r \-\-hidden / \-R \-\-no\-hidden\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Also traverse hidden directories? This is often not a good idea, since
directories like \fI\&.git/\fP would be investigated.
.UNINDENT
.UNINDENT
.sp
\fB\-z \-\-flock\-files / \-Z \-\-no\-flock\-files\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Lock all files during traversal with \fBflock(2)\fP, so they cannot be
modified while rmlint runs. The files are guaranteed to be unlocked once
rmlint exits. See also \fBman 2 flock\fP and the limitations of it.
.UNINDENT
.UNINDENT
.sp
\fB\-b \-\-match\-basename / \-B \-\-no\-match\-basename\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Only consider those files as dupes that have the same basename.
See also \fBman 1 basename\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-e \-\-match\-with\-extension / \-E \-\-no\-match\-with\-extension\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Only consider those files as dupes that have the same file extension.
For example two photos would only match if they are a \fB\&.png\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-i \-\-match\-without\-extension / \-I \-\-no\-match\-without\-extension\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Only consider those files as dupes that have the same basename minus the file
extension. For example: \fBbanana.png\fP and \fBbanana.jpeg\fP would be considered,
while \fBapple.png\fP and \fBpeach.png\fP won\(aqt.
.UNINDENT
.UNINDENT
.sp
\fB\-n \-\-newer\-than\-stamp=<timestamp_filename>\fP
\fB\-N \-\-newer\-than=<iso8601_timestamp_or_unix_timestamp>\fP
.INDENT 0.0
.INDENT 3.5
Only consider files (and their size siblings for duplicates) newer than a
certain modification time (\fImtime\fP).  The age barrier may be given as
seconds since the epoch or as ISO8601\-Timestamp like
\fI2014\-09\-08T00:12:32+0200\fP\&.
.sp
\fB\-n\fP expects a file from where it can read the timestamp from. After
rmlint run, the file will be updated with the current timestamp.
If the file does not initially exist, no filtering is done but the stampfile
is still written.
.sp
If you want to take \fBonly\fP the files (and not their size siblings) you can
use \fBfind(1)\fP:
.INDENT 0.0
.INDENT 3.5
\fBfind \-mtime \-1 | rmlint \- # find all files younger than a day\fP
.UNINDENT
.UNINDENT
.sp
\fINote:\fP you can make rmlint write out a compatible timestamp with:
.INDENT 0.0
.INDENT 3.5
\fB\-O stamp:stdout\fP
.sp
\fB\-O stamp:stdout \-c stamp:iso8601\fP
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Original Detection Options
.sp
\fB\-k \-\-keepall// / \-K \-\-no\-keepall//\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Don\(aqt delete any duplicates that are in original paths.
(Paths that were prefixed with \fB//\fP).
.sp
\fBNote:\fP for lint types other than duplicates, \fI\-\-keepallorig\fP option is ignored.
.UNINDENT
.UNINDENT
.sp
\fB\-m \-\-mustmatch// / \-M \-\-no\-mustmatch//\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Only look for duplicates of which one is in original paths.
(Paths that were prefixed with \fB//\fP).
.UNINDENT
.UNINDENT
.sp
\fB\-S \-\-sortcriteria=criteria\fP (\fIdefault\fP: m)
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fBm\fP: keep lowest mtime (oldest)  \fBM\fP: keep highest mtime (newest)
.IP \(bu 2
\fBa\fP: keep first alphabetically   \fBA\fP: keep last alphabetically
.IP \(bu 2
\fBp\fP: keep first named path       \fBP\fP: keep last named path
.UNINDENT
.sp
One can have multiple criteria, e.g.: \fB\-S am\fP will choose first alphabetically; if tied then by mtime.
\fBNote:\fP original path criteria (specified using \fI//\fP) will always take first priority over \fI\-S\fP options.
.UNINDENT
.UNINDENT
.SH FORMATTERS
.INDENT 0.0
.IP \(bu 2
\fBcsv\fP: Format all found lint as comma\-separated\-value list.
.sp
Available options:
.INDENT 2.0
.IP \(bu 2
\fIno_header\fP: Do not write a first line describing the column headers.
.UNINDENT
.IP \(bu 2
\fBsh\fP: Format all found lint as shellscript. Sane defaults for most
lint\-types are set. This formatter is activated as default.
.sp
Available options:
.INDENT 2.0
.IP \(bu 2
\fIuse_ln\fP: Instead of just deleting duplicates remove them and replace them
with hardlinks (if they are on the same partition) or with symlinks if
they\(aqre on different devices.
.IP \(bu 2
\fIsymlinks_only\fP: Only relevant with \fIuse_ln\fP, always use symbolic links,
never use hardlinks.
.UNINDENT
.IP \(bu 2
\fBprogressbar\fP: Shows a progressbar. This is meant for use with \fBstdout\fP or
\fBstderr\fP\&.
.IP \(bu 2
\fBpretty\fP: Shows all found items in realtimes nicely colored. This formatter
is activated as default.
.IP \(bu 2
\fBsummary\fP: Shows counts of files and their respective size after the run.
Also list all written files.
.IP \(bu 2
\fBconfirm\fP: Print a confirmation message before running. If \fB\-q\fP is
specified, wait till user entered his confirmation.
.UNINDENT
.SH EXAMPLES
.INDENT 0.0
.IP \(bu 2
\fBrmlint\fP
.sp
Check the current working directory for duplicates.
.IP \(bu 2
\fBfind ~/pics \-iname \(aq*.png\(aq | ./rmlint \-\fP
.sp
Read paths from \fIstdin\fP and check all png files for duplicates.
.IP \(bu 2
\fBrmlint //files files_backup \-\-keepall// \-\-mustmatch//\fP
.sp
Check for duplicate files between the current files and the backup of it.
Only files in \fIfiles_backup\fP would be reported as duplicate.
Additionally, all reported duplicates must occur in both paths.
.UNINDENT
.SH PROBLEMS
.INDENT 0.0
.IP 1. 3
\fBFalse Positives:\fP Depending on the options you use, there is a very slight risk
of false positives (files that are erroneously detected as duplicate).
Internally a hashfunctions is used to compute a \fIfingerprint\fP of a file. These
hashfunctions may, in theory, map two different files to the same
fingerprint. This happens about once in 2 ** 64 files. Since \fIrmlint\fP computes
at least 3 hashes per file and requires them to be the same size, it\(aqs very
unlikely to happen. If you\(aqre really wary, try the \fI\-\-paranoid\fP option.
.IP 2. 3
\fBFile modification during or after rmlint run:\fP It is possible that a file
that rmlint recognized as duplicate is modified afterwards, resulting in a
different file.  This is a general problem and cannot be solved from rmlint\(aqs
side alone. You should \fBnever modify the data until rmlint and the
shellscript has been run through\fP\&. Careful persons might even consider to
mount the filesystem you are scanning readonly.
.UNINDENT
.SH SEE ALSO
.INDENT 0.0
.IP \(bu 2
\fIfind(1)\fP
.IP \(bu 2
\fIrm(1)\fP
.UNINDENT
.sp
Extended documentation and an in\-depth tutorial can be found at:
.INDENT 0.0
.INDENT 3.5
\fI\%http://rmlint.rtfd.org\fP
.UNINDENT
.UNINDENT
.SH BUGS
.sp
If you found a bug, have a feature requests or want to say something nice, please
visit \fI\%https://github.com/sahib/rmlint/issues\fP\&.
.sp
Please make sure to describe your problem in detail. Always include the version
of \fIrmlint\fP (\fB\-\-version\fP). If you experienced a crash, please include
one of the following information with a debug build of \fIrmlint\fP:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fBgdb \-\-ex run \-ex bt \-\-args rmlint \-vvv [your_options]\fP
.IP \(bu 2
\fBvalgrind \-\-leak\-check=no rmlint \-vvv [your_options]\fP
.UNINDENT
.UNINDENT
.UNINDENT
.sp
You can build a debug build of \fBrmlint\fP like this:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fBgit clone git@github.com:sahib/rmlint.git\fP
.IP \(bu 2
\fBcd rmlint\fP
.IP \(bu 2
\fBscons DEBUG=1\fP
.IP \(bu 2
\fBsudo scons install  # Optional\fP
.UNINDENT
.UNINDENT
.UNINDENT
.SH LICENSE
.sp
\fIrmlint\fP is licensed under the terms of the GPLv3.
.sp
See the COPYRIGHT file that came with the source for more information.
.SH PROGRAM AUTHORS
.sp
\fIrmlint\fP was written by:
.INDENT 0.0
.IP \(bu 2
Christopher <sahib> Pahl 2010\-2014 (\fI\%https://github.com/sahib\fP)
.IP \(bu 2
Daniel <SeeSpotRun> T.   2014\-2014 (\fI\%https://github.com/SeeSpotRun\fP)
.UNINDENT
.sp
Also see the THANKS file for other people that helped us.
.sp
If you consider a donation you can use \fIFlattr\fP or buy us a beer if we meet:
.sp
\fI\%https://flattr.com/thing/302682/libglyr\fP
.SH AUTHOR
sahib@online.de
.SH COPYRIGHT
public domain
.\" Generated by docutils manpage writer.
.
