#!/usr/bin/env python
# encoding: utf-8

Import('env')
Import('VERSION_MAJOR')
Import('VERSION_MINOR')
Import('VERSION_PATCH')
Import('create_uninstall_target')


import os
import time
import tarfile


def tar_file(target, source, env):
    with tarfile.open(str(target[0]), "w:gz") as handle:
        for item in source:
            handle.add(str(item))


def build_man(target, source, env):
    rst_in_path = str(source[0])
    man_out_path = str(target[0])

    with open(rst_in_path, 'r') as handle:
        text = handle.read().format(
            VERSION='{}.{}.{} ({})'.format(
                VERSION_MAJOR, VERSION_MINOR, VERSION_PATCH, env['gitrev']
            ),
            DATE=time.strftime("%d-%m-%Y")
        )

    rst_meta_path = rst_in_path[:-4]
    with open(rst_meta_path, 'w') as handle:
        handle.write(text)

    os.system('rst2man "{s}" > "{t}"'.format(t=man_out_path, s=rst_meta_path))


env.AlwaysBuild(
    env.Alias('man',
        env.Command(
            'rmlint.1', 'rmlint.1.in.rst', build_man
        )
    )
)

manpage = env.AlwaysBuild(
    env.Command(
        'rmlint.1.gz', 'rmlint.1', tar_file
    )
)


if 'install' in COMMAND_LINE_TARGETS:
    man_install = env.Install('$PREFIX/share/man/man1', [manpage])
    env.Alias('install', [man_install])

if 'uninstall' in COMMAND_LINE_TARGETS:
    create_uninstall_target(env, '$PREFIX/share/man/man1/rmlint.1.gz')
