#!/usr/bin/env python
# encoding: utf-8

Import('env')
Import('VERSION_MAJOR')
Import('VERSION_MINOR')
Import('VERSION_PATCH')
Import('create_uninstall_target')


import os
import time
import tarfile
import subprocess


def gzip_file(target, source, env):
    subprocess.call('gzip -c {s} > {t}'.format(
        s=source[0].get_abspath(),
        t=target[0].get_abspath(),
    ), shell=True)


def build_man(target, source, env):
    subprocess.call('cd docs && make man', shell=True)


sphinx = env.AlwaysBuild(
    env.Alias('man',
        env.Command(
            '_build/man/rmlint.1', 'rmlint.1.in.rst', build_man
        )
    )
)

manpage = env.AlwaysBuild(
    env.Command(
        'rmlint.1.gz', '_build/man/rmlint.1', gzip_file
    )
)

env.Depends(manpage, sphinx)


if 'install' in COMMAND_LINE_TARGETS:
    man_install = env.Install('$PREFIX/share/man/man1', [manpage])
    env.Alias('install', [man_install])

if 'uninstall' in COMMAND_LINE_TARGETS:
    create_uninstall_target(env, '$PREFIX/share/man/man1/rmlint.1.gz')

if 'docs' in COMMAND_LINE_TARGETS:
    def make_docs(target=None, source=None, env=None):
        return subprocess.call('cd docs && make html', shell=True)

    env.Alias('docs',
        env.Command('make_docs', None, Action(make_docs, "Building online docs...")),
    )
