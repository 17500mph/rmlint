.\" Man page generated from reStructuredText.
.
.TH RMLINT 1 "2014-07-08" "0.1" "file system"
.SH NAME
rmlint \- find duplicate files and other space waste efficiently
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
rmlint [[//]TARGET_DIR ...] [FILE ...] [\-] [OPTIONS]
.SH DESCRIPTION
.sp
\fIrmlint\fP finds space waste and other broken things on your filesystem and offers
to remove it. This includes:
.INDENT 0.0
.IP \(bu 2
Duplicate files.
.IP \(bu 2
Nonstripped Binaries (Binaries with debug symbols).
.IP \(bu 2
Broken links.
.IP \(bu 2
Empty files and directories.
.IP \(bu 2
Files with broken user or group id.
.IP \(bu 2
Optionally: Double basenames.
.UNINDENT
.sp
In order to find the lint, \fIrmlint\fP is given one or more directories to traverse.
If no directory or file was given, the current working directory is assumed.
\fIrmlint\fP will take care of things like filesystem loops and symlinks during
traversing.
.sp
Found duplicates are divided into the original and duplicates. Original
are what \fIrmlint\fP thinks to be the file that was first there. You can drive
the original detection with the \fI\-S\fP option. If you know which path contains the
originals you can prefix the path with \fB//\fP,
.sp
Quick clues for adjusting settings are available by using the \-q option.
.sp
\fBNote:\fP \fIrmlint\fP will not delete any files by itself unless you command it!
.SH OPTIONS
.\" all: ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz
.
.\" use:  BC EFGHI KLMN PQRS UVWX Z abcdefghi klmnopqrstuvwx z
.
.\" nop: A  D     J    O    T    Y           j              y
.
.\" opt: t:m:d:c:C:s:o:O:S:a:vVeEwWzZnNbBrRgGuUfFXxpPkKmMiIlLqQhH
.
.SS General Options
.sp
\fB\-o \-\-output\-script[=path]\fP (\fIdefault:\fP ./rmlint.sh)
.sp
\fB\-O \-\-output\-log[=path]\fP (\fIdefault:\fP ./rmlint.log)
.INDENT 0.0
.INDENT 3.5
Specify where to output the script or log file. The path is optional, if
none is specified, no script or logfile is written.
.UNINDENT
.UNINDENT
.sp
\fB\-a \-\-algorithm=name\fP (\fIdefault:\fP spooky)
.INDENT 0.0
.INDENT 3.5
Choose the hash algorithm to use for finding duplicate files.
The following algorithms are available:
\fBspooky\fP, \fBcity\fP, \fBmurmur\fP, \fBmd5\fP\&.
.sp
If \fIrmlint\fP was compiled with \fI\-D_RM_HASH_LEN=64\fP (not by default), then
additionally the following algorithms are available:
\fBsha1\fP, \fBsha256\fP, \fBsha512\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-v \-\-loud / \-V \-\-quiet\fP
.INDENT 0.0
.INDENT 3.5
Increase or decrease the verbosity. You can pass these options several
times.
.UNINDENT
.UNINDENT
.sp
\fB\-p \-\-paranoid / \-P \-\-no\-paranoid\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Do a byte by byte comparison of each duplicate file. Use this when you do
not trust hash functions. \fIWarning:\fP Slow.
.UNINDENT
.UNINDENT
.sp
\fB\-w \-\-color\fP (\fIdefault\fP) \fB/ \-W \-\-no\-color\fP
.INDENT 0.0
.INDENT 3.5
Use color escapes for pretty output or disable them.
If you pipe \fIrmlints\fP output to a file \-W is assumed. (TODO: Implement)
.UNINDENT
.UNINDENT
.sp
\fB\-q \-\-confirm\-settings / \-Q \-\-no\-confirm\-settings\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Print a screen of the used settings and the options that you need to change
them. Requires confirmation before proceeding.
.UNINDENT
.UNINDENT
.sp
\fB\-m \-\-mode=name\fP (\fIdefault:\fP list)
.INDENT 0.0
.INDENT 3.5
Tell \fIrmlint\fP what to do with found duplicates. The mode is ignored for other
lint types than duplicates.
.INDENT 0.0
.IP \(bu 2
\fB\-\-mode list\fP:  Only list files with the command that would be executed on \fB\-\-mode cmd\fP\&.
.IP \(bu 2
\fB\-\-mode noask\fP: Remove files without asking.
.IP \(bu 2
\fB\-\-mode cmd\fP:   Execute a command given with \fI\-c / \-C\fP on the duplicate / original.
.IP \(bu 2
\fB\-\-mode link\fP:  Replace duplicates with symbolic links to their original.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-c \-\-cmd\-dup=cmd\fP (\fIdefault:\fP rm)
.sp
\fB\-C \-\-cmd\-orig=cmd\fP (\fIdefault:\fP ls)
.INDENT 0.0
.INDENT 3.5
If \fI\-\-mode cmd\fP is used you can specify the commands that are used
on duplicate files and their respective originals.
.UNINDENT
.UNINDENT
.sp
\fB\-h \-\-help / \-H \-\-version\fP
.INDENT 0.0
.INDENT 3.5
Show this manual or print the version string.
.UNINDENT
.UNINDENT
.SS Traversal Options
.sp
\fB\-t \-\-threads=N\fP (\fIdefault:\fP 16)
.INDENT 0.0
.INDENT 3.5
The number of threads to use during file tree traversal and hashing.
\fIrmlint\fP probably knows better than you how to set the value.
.UNINDENT
.UNINDENT
.sp
\fB\-s \-\-size=range\fP (\fIdefault:\fP all)
.INDENT 0.0
.INDENT 3.5
Only consider files in a certain size range.
The format of \fIrange\fP is \fImin\-max\fP, where both ends can be specified
as a number with an optional multiplier. The available multipliers are:
.INDENT 0.0
.IP \(bu 2
\fIC\fP (1^1), \fIW\fP (2^1), B (512^1), \fIK\fP (1000^1), KB (1024^1), \fIM\fP (1000^2), \fIMB\fP (1024^2), \fIG\fP (1000^3), \fIGB\fP (1024^3),
.IP \(bu 2
\fIT\fP (1000^4), \fITB\fP (1024^4), \fIP\fP (1000^5), \fIPB\fP (1024^5), \fIE\fP (1000^6), \fIEB\fP (1024^6)
.UNINDENT
.sp
The size format is about the same as \fIdd(1)\fP uses. Example: \fB"100KB\-2M"\fP\&.
.sp
It\(aqs also possible to specify only one size. In this case the size is
interpreted as "up to this size".
.UNINDENT
.UNINDENT
.sp
\fB\-d \-\-maxdepth=depth\fP (\fIdefault:\fP INF)
.INDENT 0.0
.INDENT 3.5
Only recurse up to this depth. A depth of 1 would disable recursion and is
equivalent to a directory listing.
.UNINDENT
.UNINDENT
.sp
\fB\-l \-\-hardlinked / \-L \-\-no\-hardlinked\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
By default \fIrmlint\fP will not allow several files with the same \fIinode\fP and
therefore keep only one of them in it\(aqs internal list.
If \fI\-l\fP is specified the whole group is reported instead.
.UNINDENT
.UNINDENT
.sp
\fB\-f \-\-followlinks\fP (\fIdefault\fP) \fB/ \-F \-\-no\-followlinks\fP
.INDENT 0.0
.INDENT 3.5
Follow symbolic links? If file system loops occur \fIrmlint\fP will detect this.
If \fI\-F\fP is specified, symbolic links will be ignored completely.
.sp
\fBNote:\fP Hardlinks are always followed, but it depends on \fB\-L\fP how those are
handled.
.UNINDENT
.UNINDENT
.sp
\fB\-x \-\-crossdev\fP (\fIdefault\fP) \fB/ \-X \-\-no\-crossdev\fP
.INDENT 0.0
.INDENT 3.5
Do cross over mount points (\fB\-x\fP)? Or stay always on the same device
(\fB\-X\fP)?
.UNINDENT
.UNINDENT
.sp
\fB\-r \-\-no\-hidden\fP (\fIdefault\fP) \fB/ \-R \-\-hidden\fP
.INDENT 0.0
.INDENT 3.5
Also traverse hidden directories? This is often not a good idea, since
directories like \fI\&.git/\fP would be investigated.
.UNINDENT
.UNINDENT
.SS Lint options
.sp
\fB\-e \-\-emptyfiles\fP (\fIdefault\fP) \fB/ \-E \-\-no\-emptyfiles\fP
.INDENT 0.0
.INDENT 3.5
Find and list empty files?
.UNINDENT
.UNINDENT
.sp
\fB\-z \-\-emptydirs\fP (\fIdefault\fP) \fB/ \-Z \-\-no\-emptydirs\fP
.INDENT 0.0
.INDENT 3.5
Find and list empty directories?
.UNINDENT
.UNINDENT
.sp
\fB\-n \-\-namecluster / \-N \-\-no\-namecluster\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Find files with the same basename? Files that have the same basename
are still checked to be duplicates if \fI\-U\fP was not passed.
.UNINDENT
.UNINDENT
.sp
\fB\-b \-\-nonstripped / \-B \-\-no\-nonstripped\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Find binaries with debug symbols. Debug symbols can be removed via the
\fIstrip\fP utility. \fIWarning:\fP Slow if applied to many binaries.
.UNINDENT
.UNINDENT
.sp
\fB\-g \-\-badids\fP (\fIdefault\fP) \fB/ \-G \-\-no\-badids\fP
.INDENT 0.0
.INDENT 3.5
Find files or directories with bad \fIUID\fP, \fIGID\fP or \fIboth\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-u \-\-dups\fP (\fIdefault\fP) \fB/ \-U \-\-no\-dups\fP
.INDENT 0.0
.INDENT 3.5
Find duplicate files?
.UNINDENT
.UNINDENT
.sp
\fB\-k \-\-keepallorig / \-K \-\-no\-keepallorig\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Don\(aqt delete any duplicates that are in original paths.
(Paths that were prefixed with \fB//\fP).
.sp
\fBNote:\fP for lint types other than duplicates, \fI\-\-keepallorig\fP option is ignored.
.UNINDENT
.UNINDENT
.sp
\fB\-m \-\-mustmatchorig / \-M \-\-no\-mustmatchorig\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Only look for duplicates of which one is in original paths.
(Paths that were prefixed with \fB//\fP).
.UNINDENT
.UNINDENT
.sp
\fB\-i \-\-invertorig / \-I \-\-no\-invertorig\fP (\fIdefault\fP)
.INDENT 0.0
.INDENT 3.5
Paths prefixed with \fB//\fP are non\-originals and all other paths are originals.
.UNINDENT
.UNINDENT
.sp
\fB\-S \-\-sortcriteria=criteria\fP (\fIdefault\fP: m)
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fBm\fP: keep lowest mtime (oldest)  \fBM\fP: keep highest mtime (newest)
.IP \(bu 2
\fBa\fP: keep first alphabetically   \fBA\fP: keep last alphabetically
.IP \(bu 2
\fBp\fP: keep first named path       \fBP\fP: keep last named path
.UNINDENT
.sp
One can have multiple criteria, e.g.: \fB\-S am\fP will choose first alphabetically; if tied then by mtime.
\fBNote:\fP original path criteria (specified using \fI//\fP) will always take first priority over \fI\-S\fP options.
.UNINDENT
.UNINDENT
.SH EXAMPLES
.INDENT 0.0
.IP \(bu 2
\fBrmlint\fP
.sp
Check the current working directory for duplicates.
.IP \(bu 2
\fBfind ~/pics \-iname \(aq*.png\(aq | ./rmlint \-\fP
.sp
Read paths from \fIstdin\fP and check all png files for duplicates.
.IP \(bu 2
\fBrmlint //files files_backup \-\-keepallorig \-\-mustmatchorig\fP
.sp
Check for duplicate files between the current files and the backup of it.
Only files in \fIfiles_backup\fP would be reported as duplicate.
Additionally, all reported duplicates must occur in both paths.
.UNINDENT
.SH PROBLEMS
.INDENT 0.0
.IP 1. 3
\fBFalse Positives:\fP Depending on the options you use, there is a very slight risk
of false positives (files that are erroneously detected as duplicate).
Internally a hasfunctions is used to compute a \fIfingerprint\fP of a file. These
hashfunctions may, in theory, map two different files to the same
fingerprint. This happens about once in 2 ** 64 files. Since \fIrmlint\fP computes
at least 3 hashes per file and requires them to be the same size, it\(aqs very
unlikely to happen. If you\(aqre really wary, try the \fI\-\-paranoid\fP option.
.UNINDENT
.SH SEE ALSO
.INDENT 0.0
.IP \(bu 2
\fIfind(1)\fP
.IP \(bu 2
\fIrm(1)\fP
.UNINDENT
.sp
Extended documentation and an in\-depth tutorial can be found at:
.sp
TODO: Actually write this tutorial.
.SH BUGS
.sp
If you found a bug, have a feature requests or want to say something nice, please
visit \fI\%https://github.com/sahib/rmlint/issues\fP\&.
.sp
Please make sure to describe your problem in detail. Always include the version
of \fIrmlint\fP (\fB\-\-version\fP). If you experienced a crash, please include
one of the following information with a debug build of \fIrmlint\fP:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fBgdb \-\-ex run \-ex bt \-\-args rmlint \-vvv [your_options]\fP
.IP \(bu 2
\fBvalgrind \-\-leak\-check=no rmlint \-vvv [your_options]\fP
.UNINDENT
.UNINDENT
.UNINDENT
.sp
You can build a debug build of \fBrmlint\fP like this:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fBgit clone git@github.com:sahib/rmlint.git\fP
.IP \(bu 2
\fBcd rmlint\fP
.IP \(bu 2
\fBscons DEBUG=1\fP
.IP \(bu 2
\fBsudo scons install  # Optional\fP
.UNINDENT
.UNINDENT
.UNINDENT
.SH LICENSE
.sp
\fIrmlint\fP is licensed under the terms of the GPLv3.
.sp
See the COPYRIGHT file that came with the source for more information.
.SH PROGRAM AUTHORS
.sp
\fIrmlint\fP was written by:
.INDENT 0.0
.IP \(bu 2
Christopher <sahib> Pahl 2010\-2014 (\fI\%https://github.com/sahib\fP)
.IP \(bu 2
Daniel <SeeSpotRun> T.   2014\-2014 (\fI\%https://github.com/SeeSpotRun\fP)
.UNINDENT
.sp
Also see the THANKS file for other people that helped us.
.sp
If you consider a donation you can use \fIFlattr\fP or buy us a beer if we meet:
.sp
\fI\%https://flattr.com/thing/302682/libglyr\fP
.SH AUTHOR
sahib@online.de
.SH COPYRIGHT
public domain
.\" Generated by docutils manpage writer.
.
