#ifndef RM_CONFIG_H
#define RM_CONFIG_H

#define HAVE_GLIB {HAVE_GLIB}
#define HAVE_BLKID {HAVE_BLKID}

#define RMLINT_VERSION "{VERSION_MAJOR}.{VERSION_MINOR}.{VERSION_PATCH}"
#define RMLINT_VERSION_MAJOR {VERSION_MAJOR}
#define RMLINT_VERSION_MINOR {VERSION_MINOR}
#define RMLINT_VERSION_PATCH {VERSION_PATCH}
#define RMLINT_VERSION_GIT_REVISION "{VERSION_GIT_REVISION}"

/* Might come in useful */
#define RMLINT_CHECK_VERSION(X,Y,Z) (0  \
    || X <= RM_VERSION_MAJOR        \
    || Y <= RM_VERSION_MINOR        \
    || Z <= RM_VERSION_MICRO        \
)

/* not supposed to be changed */
#ifndef _RM_HASH_LEN
#define _RM_HASH_LEN 16
#endif

/* These colors should only be used with the rm_log_* macros below */
#define RED    "\x1b[31;01m"
#define YELLOW "\x1b[33;01m"
#define RESET  "\x1b[0m"
#define GREEN  "\x1b[32;01m"
#define BLUE   "\x1b[34;01m"

#include <errno.h>

#define rm_log_debug(...) \
    g_log("rmlint", G_LOG_LEVEL_DEBUG, __VA_ARGS__)
#define rm_log_info(...) \
    g_log("rmlint", G_LOG_LEVEL_INFO, __VA_ARGS__)
#define rm_log_warning(...) \
    g_log("rmlint", G_LOG_LEVEL_WARNING, __VA_ARGS__)
#define rm_log_error(...) \
    g_log("rmlint", G_LOG_LEVEL_CRITICAL, __VA_ARGS__)

#define rm_log_perror(message)                                                           \
    if(errno) {{                                                                         \
        rm_log_error("%s:%d: %s: %s\n", __FILE__, __LINE__, message, g_strerror(errno)); \
    }}                                                                                   \
 

#endif
